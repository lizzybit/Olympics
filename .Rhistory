vertex.color = "green",
plot(g,
vertex.color = "green",
vertex size = 40,
edge.color = 'red')
edge.color = 'red'')
plot(g,
vertex.color = "green",
vertex size = 40,
edge.color = "red")
g <- graph(c(1,2))
plot(g,
vertex.color = "green",
vertex size = 40,
edge.color = "red")
plot(g,
vertex.color = "green",
vertex size = 40,
edge.color = "red")
install.packages("igraph")
library(igraph)
g <- graph(c(1,2))
plot(g,
vertex.color = "green",
vertex size = 40,
edge.color = "red")
plot(g,
vertex.color = "green",
vertex size = 40,
plot(g,
vertex.color = "green",
vertex.size = 40,
edge.color = "red")
library(igraph)
g <- graph(c(1,2))
plot(g,
vertex.color = "green",
vertex.size = 40,
edge.color = "red")
install.packages("igraph")
library(igraph)
g <- graph(c(1,2,2,3,3,4,4,1))
plot(g,
vertex.color = "green",
vertex.size = 40,
edge.color = "red")
g <- graph(c(1,2,2,3,3,4,4,1))
plot(g,
vertex.color = "green",
vertex.size = 40,
edge.color = "red")
g <- graph(c(1,2,2,3,3,4,4,1),
directed = F)
plot(g,
vertex.color = "green",
vertex.size = 40,
edge.color = "red")
g <- graph(c(1,2,2,3,3,4,4,1),
directed = F,
n = 7)
g <- graph(c(1,2,2,3,3,4,4,1),
directed = F,
n = 7)
g <- graph(c(1,2,2,3,3,4,4,1),
directed = F,
n = 7)
plot(g,
vertex.color = "green",
vertex.size = 40,
edge.color = "red")
g[]
g1 <- graph(c("Liz", "Peter", "Peter", "Chris", "Chris", "Amy",
"Liz", "Chris", "Kate", "Chris"),
directed=T)
plot(g1,
vertex.color = "green",
vertex.size = 40,
edge.color = "red")
degree(g1, mode='all')
degree(g1, mode='in')
degree(g1, mode='out')
diameter(g1, directed=F, weights = NA)
edge_density(g1, loops = F)
ecount(g1)/(vcount(g1)*(vcount(g1)-1))
reciprocity(g1)
closeness(g1, mode='all', weights = NA)
betweenness(g1, directed=T, weights=NA)
edge_betweenness(g1, directed=T, weights=NA)
diameter(g1, directed=F, weights = NA)
edge_density(g1, loops = F)
ecount(g1)/(vcount(g1)*(vcount(g1)-1))
reciprocity(g1)
closeness(g1, mode='all', weights = NA)
betweenness(g1, directed=T, weights=NA)
edge_betweenness(g1, directed=T, weights=NA)
diameter(g1, directed=F, weights = NA)
edge_density(g1, loops = F)
ecount(g1)/(vcount(g1)*(vcount(g1)-1))
reciprocity(g1)
closeness(g1, mode='all', weights = NA)
betweenness(g1, directed=T, weights=NA)
edge_betweenness(g1, directed=T, weights=NA)
y <- data.frame(data$first, data$second)
data <- read.csv('/Users/elizabeth/Documents/GitHub/R/networkdata.csv', header=T)
y <- data.frame(data$first, data$second)
library(readr)
networkdata <- read_csv("Documents/GitHub/R/networkdata.csv")
View(networkdata)
View(data)
net <- graph.data.frame(y, directed=T)
V(net)$label <- V(net)$name
V(net)$degree <- degree(net)
hist(V(net)$degree)
plot(net)
plot(net,
vertex.color = rainbow(52),
vertex.size = V(net)$degree*0.4,
edge.arrow.size = 0.1,
layout=layout.fruchterman.reingold)
hs <- hub_score(net)$vector
as <- authority.score(net)$vector
par(mfrow=c(1,2))
set.seed(123)
plot(net,
vertex.size=hs*30,
main = 'Hubs',
vertex.color = rainbow(52),
edge.arrow.size=0.1,
layout = layout.kamada.kawai)
plot(net,
vertex.size=as*30,
main = 'Authorities',
vertex.color = rainbow(52),
edge.arrow.size=0.1,
layout = layout.kamada.kawai)
par(mfrow=c(1,1))
# Community detection
net <- graph.data.frame(y, directed = F)
cnet <- cluster_edge_betweenness(net)
plot(cnet)
net <- graph.data.frame(y, directed = F)
cnet <- cluster_edge_betweenness(net)
plot(cnet)
load("~/Downloads/ATT86285.RData")
install.packages("readr")
install.packages("sqldf")
install.packages("calibrate")
install.packages("repr")
install.packages("tidyverse")
library(readr)
library(sqldf)
library(calibrate)
library(repr)
library(tidyverse)
list.files(path = "/Users/elizabeth/Documents/GitHub/Simpsons")
data_fp = '/Users/elizabeth/Documents/GitHub/Simpsons'
head(episodes)
episodes_fp = '/Users/elizabeth/Documents/GitHub/Simpsons/simpsons_episodes.csv'
head(episodes)
install.packages("readxl")
library(readxl)
library(readxl)
## Download and install all required packages
install.packages("readr")
install.packages("sqldf")
install.packages("calibrate")
install.packages("repr")
install.packages("tidyverse")
install.packages("readxl")
library(readr)
library(sqldf)
library(calibrate)
library(repr)
library(tidyverse)
library(readxl)
install.packages("sqldf")
## Download and install all required packages
install.packages("readr")
install.packages("sqldf")
install.packages("calibrate")
install.packages("repr")
install.packages("tidyverse")
install.packages("readxl")
library(readr)
library(sqldf)
library(calibrate)
library(repr)
library(tidyverse)
library(readxl)
library(readr)
library(sqldf)
library(calibrate)
library(repr)
library(tidyverse)
library(readxl)
install.packages("readr")
install.packages("readr")
install.packages("readr")
install.packages("readr")
install.packages("sqldf")
install.packages("calibrate")
install.packages("repr")
install.packages("tidyverse")
install.packages("readxl")
library(readr)
library(sqldf)
library(calibrate)
library(repr)
library(tidyverse)
library(readxl)
library(readr)
library(sqldf)
library(calibrate)
library(repr)
library(tidyverse)
library(readxl)
setwd("/Users/elizabeth/Documents/GitHub/Olympics")
getwd()
episode_data <- read.csv("athlete_events.csv", header = TRUE)
View(episode_data)
olympics <- read.csv("athlete_events.csv", header = TRUE)
class(olympics)
head(olympics)
View(olympics)
View(olympics)
install.packages("impute")
install.packages("impute", version = "1.64.0")
install.packages("mice")
library(mice)
olympics[is.na(olympics)] <- "NA"
head(olympics)
View(olympics)
View(olympics)
View(olympics)
## Import data
setwd("/Users/elizabeth/Documents/GitHub/Simpsons")
getwd()
episode_data <- read.csv("simpsons_episodes.csv", header = TRUE)
head(episode_data)
View(episode_data)
View(episode_data)
View(episode_data)
###########################################################
###########################################################
## Import data
setwd("/Users/elizabeth/Documents/GitHub/Olympics")
getwd()
olympics <- read.csv("athlete_events.csv", header = TRUE)
View(olympics)
View(olympics)
colSums(is.na(olympics)
col <- colSums(is.na(olympics)
yup <- colSums(is.na(olympics)
yup
sum(is.na(olympics))
sum(is.na(olympics$ID))
sum(is.na(olympics$Name))
sum(is.na(olympics$Sex))
sum(is.na(olympics$Age))
sum(is.na(olympics$Height))
sum(is.na(olympics$Weight))
sum(is.na(olympics$Team))
sum(is.na(olympics$NOC))
colSums(is.na(olympics))
m <- colSums(is.na(olympics))
m
print(m)
install.packages("knitr")
library(knitr)
knitr: :kable(m, format =  'markdown')
kable(m, format =  'markdown')
exporttable(m, format =  'markdown')
exporttable(m, format =  "md")
export_table(m, format =  "md")
m <- colSums(is.na(olympics))
print(m)
kable(m, format =  'markdown')
null_values <- colSums(is.na(olympics))
olympics <- read.csv("athlete_events.csv", header = TRUE)
null_values <- colSums(is.na(olympics))
kable(null_values, format =  'markdown')
str(olympics)
olympics[is.na(olympics)] <- "NA"
olympics$Medal[is.na(olympics$Medal)] <- 'NA'
View(olympics)
setwd("/Users/elizabeth/Documents/GitHub/Olympics")
getwd()
olympics <- read.csv("athlete_events.csv", header = TRUE)
head(olympics)
str(olympics)
null_values <- colSums(is.na(olympics))
kable(null_values, format =  'markdown')
olympics$Medal[is.na(olympics$Medal)] <- "NA"
sum(is.na(olympics$Medal))
View(olympics)
setwd("/Users/elizabeth/Documents/GitHub/Olympics")
getwd()
olympics <- read.csv("athlete_events.csv", header = TRUE)
head(olympics)
str(olympics)
null_values <- colSums(is.na(olympics))
kable(null_values, format =  'markdown')
olympics$Medal[is.na(olympics$Medal)] <- "NA"
View(olympics)
###########################################################
###########################################################
## Import data
setwd("/Users/elizabeth/Documents/GitHub/Olympics")
getwd()
olympics <- read.csv("athlete_events.csv", header = TRUE)
head(olympics)
str(olympics)
###########################################################
###########################################################
## Clean Data
# 1. Find null values
null_values <- colSums(is.na(olympics))
kable(null_values, format =  'markdown')
# 2. Fill the missing values in the column Medal with string of 'NA'
olympics$Medal[is.na(olympics$Medal)] <- "DNW"
sum(is.na(olympics$Medal))
# 3.
sum(is.na(olympics$Medal))
View(olympics)
setwd("/Users/elizabeth/Documents/GitHub/Olympics")
getwd()
olympics <- read.csv("athlete_events.csv", header = TRUE)
head(olympics)
str(olympics)
###########################################################
###########################################################
## Clean Data
# 1. Find null values
null_values <- colSums(is.na(olympics))
kable(null_values, format =  'markdown')
# 2. Fill the missing values in the column Medal with string of 'NA'
olympics$Medal[is.na(olympics$Medal)] <- "DNW"
sum(is.na(olympics$Medal))
# 3.
data$height[is.na(data$height)] <- mean(data$height, na.rm = TRUE)
olympics$height[is.na(data$height)] <- mean(olympics$height, na.rm = TRUE)
olympics$height[is.na(data$height)] <- mean(olympics$height, na.rm = TRUE)
olympics$height[is.na(olympics$height)] <- mean(olympics$height, na.rm = TRUE)
null_values <- colSums(is.na(olympics))
kable(null_values, format =  'markdown')
mean_weight <- mean(olympics$Weight, na.rm = TRUE)
olympics$Weight[is.na(olympics$Weight)] <- mean_weight
kable(null_values, format =  'markdown')
###########################################################
###########################################################
## Import data
setwd("/Users/elizabeth/Documents/GitHub/Olympics")
getwd()
olympics <- read.csv("athlete_events.csv", header = TRUE)
head(olympics)
str(olympics)
###########################################################
###########################################################
## Clean Data
# 1. Find null values
null_values <- colSums(is.na(olympics))
kable(null_values, format =  'markdown')
# 2. Fill the missing values in the column Medal with string of 'NA'
olympics$Medal[is.na(olympics$Medal)] <- "DNW"
sum(is.na(olympics$Medal))
# 3.Fill missing values with mean for height, weight, and age
mean_weight <- mean(olympics$Weight, na.rm = TRUE)
olympics$Weight[is.na(olympics$Weight)] <- mean_weight
kable(null_values, format =  'markdown')
###########################################################
###########################################################
## Import data
setwd("/Users/elizabeth/Documents/GitHub/Olympics")
getwd()
olympics <- read.csv("athlete_events.csv", header = TRUE)
head(olympics)
str(olympics)
###########################################################
###########################################################
## Clean Data
# 1. Find null values
null_values <- colSums(is.na(olympics))
kable(null_values, format =  'markdown')
# 2. Fill the missing values in the column Medal with string of 'NA'
olympics$Medal[is.na(olympics$Medal)] <- "DNW"
sum(is.na(olympics$Medal))
# 3.Fill missing values with mean for height, weight, and age
# Replace missing values in height with mean
olympics$height[is.na(olympics$height)] <- mean(olympics$height, na.rm = TRUE)
olympics$height <- as.numeric(olympics$height)
olympics$height <- as.numeric(olympics$height)
View(olympics)
View(olympics)
olympics$Height[is.na(olympics$Height)] <- mean(olympics$Height, na.rm = TRUE)
# Replace missing values in height, weight and age with mean
olympics$Height[is.na(olympics$Height)] <- mean(olympics$Height, na.rm = TRUE)
olympics$Weight[is.na(olympics$Weight)] <- mean(olympics$Weight, na.rm = TRUE)
olympics$Age[is.na(olympics$Age)] <- mean(olympics$Age, na.rm = TRUE)
kable(null_values, format =  'markdown')
null_values <- colSums(is.na(olympics))
kable(null_values, format =  'markdown')
olympics$Medal[is.na(olympics$Medal)] <- "DNW"
###########################################################
###########################################################
## Import data
setwd("/Users/elizabeth/Documents/GitHub/Olympics")
getwd()
olympics <- read.csv("athlete_events.csv", header = TRUE)
head(olympics)
str(olympics)
###########################################################
###########################################################
## Clean Data
# 1. Find null values
null_values <- colSums(is.na(olympics))
kable(null_values, format =  'markdown')
# 2. Fill the missing values in the column Medal with string of 'NA'
olympics$Medal[is.na(olympics$Medal)] <- "DNW"
sum(is.na(olympics$Medal))
# 3.Fill missing values with mean for height, weight, and age
# Replace missing values in height, weight and age with mean
olympics$Height[is.na(olympics$Height)] <- mean(olympics$Height, na.rm = TRUE)
olympics$Weight[is.na(olympics$Weight)] <- mean(olympics$Weight, na.rm = TRUE)
olympics$Age[is.na(olympics$Age)] <- mean(olympics$Age, na.rm = TRUE)
kable(null_values, format =  'markdown')
null_values <- colSums(is.na(olympics))
kable(null_values, format =  'markdown')
null_values <- colSums(is.na(olympics))
kable(null_values, format =  'markdown')
olympics$Games <- NULL
str(olympics)
View(olympics)
View(olympics)
## Import data
setwd("/Users/elizabeth/Documents/GitHub/Olympics")
getwd()
olympics <- read.csv("athlete_events.csv", header = TRUE)
head(olympics)
str(olympics)
###########################################################
###########################################################
## Clean Data
# 1. Find null values
null_values <- colSums(is.na(olympics))
kable(null_values, format =  'markdown')
# 2. Fill the missing values in the column Medal with string of 'DNW'
olympics$Medal[is.na(olympics$Medal)] <- "DNW"
sum(is.na(olympics$Medal))
# 3. Replace missing values in height, weight and age with mean
olympics$Height[is.na(olympics$Height)] <- mean(olympics$Height, na.rm = TRUE)
olympics$Weight[is.na(olympics$Weight)] <- mean(olympics$Weight, na.rm = TRUE)
olympics$Age[is.na(olympics$Age)] <- mean(olympics$Age, na.rm = TRUE)
null_values <- colSums(is.na(olympics))
kable(null_values, format =  'markdown')
View(olympics)
View(olympics)
olympics$Games <- NULL
View(olympics)
View(olympics)
head(olympics)
glimpse(olympics)
str(olympics)
head(olympics)
colnames(olympics) <- tolower(colnames(olympics))
head(olympics)
colnames(olympics)
setwd("/Users/elizabeth/Documents/GitHub/Olympics")
getwd()
olympics <- read.csv("athlete_events.csv", header = TRUE)
head(olympics)
str(olympics)
colnames(olympics)
colnames(olympics) <- tolower(colnames(olympics))
colnames(olympics)
null_values <- colSums(is.na(olympics))
kable(null_values, format =  'markdown')
###########################################################
###########################################################
## Import data
setwd("/Users/elizabeth/Documents/GitHub/Olympics")
getwd()
olympics <- read.csv("athlete_events.csv", header = TRUE)
head(olympics)
str(olympics)
###########################################################
###########################################################
## Clean Data
# 1. Find null values
null_values <- colSums(is.na(olympics))
kable(null_values, format =  'markdown')
# 2. Fill the missing values in the column Medal with string of 'DNW'
olympics$Medal[is.na(olympics$Medal)] <- "DNW"
sum(is.na(olympics$Medal))
# 3. Replace missing values in height, weight and age with mean
olympics$Height[is.na(olympics$Height)] <- mean(olympics$Height, na.rm = TRUE)
olympics$Weight[is.na(olympics$Weight)] <- mean(olympics$Weight, na.rm = TRUE)
olympics$Age[is.na(olympics$Age)] <- mean(olympics$Age, na.rm = TRUE)
null_values <- colSums(is.na(olympics))
kable(null_values, format =  'markdown')
# 4. Drop unused games column as it contains data already found in year and season column
olympics$Games <- NULL
head(olympics)
dim(olympics)
str(olympics)
install.packages("rmarkdown")
library(rmarkdown)
Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
---
title: "Olympics Markdown"
knit_with_parameters("~/Documents/GitHub/Olympics/Olympics.Rmd")
knit_with_parameters("~/Documents/GitHub/Olympics/Olympics.Rmd")
knit_with_parameters("~/Documents/GitHub/Olympics/Olympics.Rmd")
